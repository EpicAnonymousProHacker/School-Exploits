from distutils.command.upload import upload
from fileinput import close
from xml.etree.ElementTree import tostring
from selenium import webdriver
import undetected_chromedriver as uc
from selenium.webdriver.common.by import By
import selenium.common.exceptions as exc
from selenium.webdriver.common.keys import Keys
from dateutil.tz import *
import time


class FastPathways:

    def __init__(self, loops, classlink):

        self.loops = loops

        chrome_options = uc.ChromeOptions()

        chrome_options.add_argument("--disable-extensions")

        chrome_options.add_argument("--disable-popup-blocking")

        chrome_options.add_argument("--profile-directory=Default")

        chrome_options.add_argument("--disable-plugins-discovery")

        self.driver = uc.Chrome(options=chrome_options)

        self.executor_url = self.driver.command_executor._url
        self.session_id = self.driver.session_id
        self.driver.get(classlink)

    def findByClass(self, name):
        while True:
            try:
                found = self.driver.find_element_by_xpath("//*[@class='" + name +"']")
                print("found: " + name)
                break
            except exc.NoSuchElementException or exc.ElementClickInterceptedException:
                print("finding: " + name)

                time.sleep(1)
        return found

    def tryClick(self, element):
        try:
            element.click()
            time.sleep(1)
            uploadButton2 = self.findByClass("relative next-button ph3 pv2 card-button round-button ng-star-inserted")
            self.tryClickSecondButton(uploadButton2)
        except exc.ElementClickInterceptedException or exc.ElementNotInteractableException or exc.ElementNotVisibleException or exc.NoSuchElementException:
            pass


    def tryClickSecondButton(self, element):
        try:
            element.click()
        except exc.ElementClickInterceptedException or exc.ElementNotInteractableException or exc.ElementNotVisibleException or exc.NoSuchElementException:
            pass

    def DoModules(self):

        for _ in range(self.loops):

            start_time = time.time()

            uploadButton = self.findByClass("relative check-button ph3 pv2 card-button round-button ng-star-inserted")
            self.tryClick(uploadButton)

            finish_time = time.time() - start_time

            print('Did Module in ', finish_time)

            time.sleep(2.5)

        print("All videos uploaded")
        exit()